div {
    color: #000;
}

//Operaciones
$spacing: 4px;

div {
    padding: $spacing * 2;
}

//Condicionales
$animal: perro;

div {
    @if $animal == gato {
        color: black;
    } @else if $animal != gato {
        color: red;
    }
}

// Bucles
@for $i from 1 to 7 {

    h#{$i} {
        font-size: 4em/ $i;
    }
}

//Bucle Each
$lista-colores: red, green, yellow, blue;
@each $color in $lista-colores {
    .color-#{$color} {
        background-color: $color;
    }
}

// Mapas
$redes: (
    twitter: #0084ff,
    facebook: #062644,
    instagram: #c34e9a
);

@each $red, $color in $redes {
    .red-#{$red} {
        color: $color;
    }
}

//Extend
.boton {
    border: solid 2px;
    padding: 10px 15px;
    margin: 5px;
}

.boton-primario {
    @extend .boton;
    border-color: red;
    background-color: red;
}

//Mixins: Similar al extend, pero sin agregar la clase
//se usa mucho para las claes de tipografia
//FORMA 1
@mixin size ($alto, $ancho, $espaciado) {
    height: $alto;
    width: $ancho;
    margin: $espaciado;
}

div{
    @include size (2px, 5px, 10px);
    text-align: center;
    display: flex;
}

//FORMA 2
@mixin size-2  {
    height: 20px;
    width: 20px;
    margin: 5px 15px 2px 25px;
    
}

div{
    @include size-2;
    text-align:center;
    display: flex;
    flex-direction: row;
}


//Para propiedades que se repiten mucho, se aplica mixin o extend